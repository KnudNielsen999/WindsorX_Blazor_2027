@page "/indkob"
@inject IIndkobRepository IndkobsRepository
@inject ILagerRepository LagerRepository
@using WindsorX_2027.IndkoebsModel
@using WindsorX_2027.IndkoebsRepositoryMappe
@using WindsorX_2027.LagerRepositoryMappe


<TopMenuBootstrap/>

<h2 class="col-12 text-center">Opret Indkøbsordre</h2>


<EditForm Model="indkob" OnValidSubmit="SaveIndkob">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container">
        <h4>Indkøbsoplysninger</h4>
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Ordre Nummer:</label>
            <div class="col-sm-10">
                <InputText class="form-control" @bind-Value="indkob.ordreNummer" disabled />
            </div>
        </div>

        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Kunde Nummer:</label>
            <div class="col-sm-10">
                <InputText class="form-control" @bind-Value="indkob.kundeNummer" />
            </div>
        </div>

        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Ordre Dato:</label>
            <div class="col-sm-10">
                <InputDate class="form-control" @bind-Value="indkob.ordreDato" />
            </div>
        </div>

        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Ordre Detaljer:</label>
            <div class="col-sm-10">
                <InputTextArea class="form-control" @bind-Value="indkob.ordreDetaljer" />
            </div>
        </div>

        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Reference Detaljer:</label>
            <div class="col-sm-10">
                <InputTextArea class="form-control" @bind-Value="indkob.referenceDetaljer" />
            </div>
        </div>

        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Leverandør Nummer:</label>
            <div class="col-sm-10">
                <InputText class="form-control" @bind-Value="indkob.leverandorNummer" />
            </div>
        </div>

        <h4>Ordrelinjer</h4>
        @foreach (var ordreLinje in indkob.ordreLinjer)
        {
            <div class="border rounded p-3 mb-3">
                <div class="form-group row">
                    <div class="col-sm-2">
                        <label>Vare Nummer:</label>
                        <InputText class="form-control" @bind-Value="ordreLinje.vareNummer" />
                    </div>
                    <div class="col-sm-2">
                        <label>Vare Tekst:</label>
                        <InputText class="form-control" @bind-Value="ordreLinje.vareTekst" Disabled="true" />
                    </div>
                    <div class="col-sm-1">
                        <label>Antal:</label>
                        <InputNumber class="form-control" @bind-Value="ordreLinje.ordreAntal" />
                    </div>
                    <div class="col-sm-1">
                        <label>Enheder:</label>
                        <InputText class="form-control" @bind-Value="ordreLinje.enheder" Disabled="true" />
                    </div>
                    <div class="col-sm-2">
                        <label>Kost Pris:</label>
                        <InputNumber class="form-control" @bind-Value="ordreLinje.kostPris" Disabled="true" />
                    </div>

                    <div class="col d-flex justify-content-center align-items-center">
                        <button type="button" class="btn btn-primary w-100 h-75" @onclick="() => OnVarenummerChanged(ordreLinje)">Tjek Varenummer</button>
                    </div>
                    <div class="col d-flex justify-content-center align-items-center px-0">
                        <button type="button" class="btn btn-danger w-100 h-75" @onclick="() => RemoveOrdreLinje(ordreLinje)">Fjern</button>
                    </div>



                </div>
            </div>
        }

        <div class="col-2 align-items-start">
            <button type="button" class="btn btn-secondary py-2 my-2 w-100  " @onclick="AddOrdreLinje">Tilføj Ordrelinje</button>
        </div>

        <div class="col-2 align-items-start">
            <button type="submit" class="btn btn-success  py-2 my-2 w-100">Gem Indkøbsordre</button>
        </div>

    </div>
</EditForm>

@if (errorMessage != null)
{
    <p class="text-danger">@errorMessage</p>
}
<p>@vistekst</p>

@code {
    private IndkobModel? indkob = new IndkobModel();
    private string? errorMessage;
    private string? vistekst;

    private void AddOrdreLinje()
    {

        indkob?.ordreLinjer.Add(new OrdreModel());
    }

    private void RemoveOrdreLinje(OrdreModel ordreLinje)
    {
        indkob?.ordreLinjer.Remove(ordreLinje);
    }


    private async Task EnsureStamdataForOrdrelinjer()
    {
        foreach (var ordreLinje in indkob.ordreLinjer)
        {
            var vare = await LagerRepository.GetVareByVarenummerAsync(ordreLinje.vareNummer);
            if (vare != null)
            {
                ordreLinje.vareTekst = vare.vareTekst;
                ordreLinje.enheder = vare.enheder;
                ordreLinje.kostPris = vare.kostPris;
                ordreLinje.leverandørNummer = indkob.leverandorNummer;
                ordreLinje.IndkobModelId = indkob.Id;
            }
        }
    }

    private async Task SaveIndkob()
    {
        try
        {
            await EnsureStamdataForOrdrelinjer(); // Sørg for at alle ordrelinjer har opdateret stamdata
            await IndkobsRepository.CreateIndkobAsync(indkob);
            await OpdaterLagerData(indkob);

            vistekst = "Indkøbsordre gemt!";
            indkob = new IndkobModel();
            errorMessage = null;
        }
        catch (Exception ex)
        {
            errorMessage = $"Der opstod en fejl under gemning: {ex.Message}";
            Console.WriteLine(errorMessage);
        }
    }

    private async Task OnVarenummerChanged(OrdreModel ordreLinje)
    {
        var vare = await LagerRepository.GetVareByVarenummerAsync(ordreLinje.vareNummer);
        if (vare != null)
        {
            ordreLinje.vareTekst = vare.vareTekst;
            ordreLinje.enheder = vare.enheder;
            ordreLinje.kostPris = vare.kostPris;
            ordreLinje.leverandørNummer = indkob.leverandorNummer;
            

        }
        else
        {
            errorMessage = "Varenummer ikke fundet i lageret.";
        }
        StateHasChanged();
    }


    private async Task OpdaterLagerData(IndkobModel indkob)
    {
        foreach (var ordreLinje in indkob.ordreLinjer)
        {
            // Hent varen baseret på vareNummer i ordreLinje
            var vareopdatering = await LagerRepository.GetVareByVarenummerAsync(ordreLinje.vareNummer);
            

            // Hvis varen findes i lageret, opdater bestillingsdatoen og bestilt antal
            if (vareopdatering != null)
            {
                vareopdatering.sidsteBestillingsDato = indkob.ordreDato;
                //vareopdatering.bestiltAntal = ordreLinje.ordreAntal; 
                vareopdatering.bestiltAntal = (vareopdatering.bestiltAntal ?? 0) + (ordreLinje.ordreAntal ?? 0); // Brug nul hvis nogen af dem er null

                await LagerRepository.UpdateItemAsync(vareopdatering);
            }
            else
            {
                errorMessage = $"Varenummer {ordreLinje.vareNummer} blev ikke fundet i lageret.";
                Console.WriteLine(errorMessage);
            }
        }

    }

}
